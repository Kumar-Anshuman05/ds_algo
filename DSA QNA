Q1.
Given an array of positive integers arr[] of size n, the task is to find second largest distinct element in the array.

Note: If the second largest element does not exist, return -1.

ANSWER>>
class Solution {
  public:
    int getSecondLargest(vector<int> &arr) {
        int n = arr.size();
        // code here
        if (n < 2) return -1; 

    int largest = INT_MIN;
    int second = INT_MIN;

    for (int i = 0; i < n; ++i) {
        if (arr[i] > largest) {
            second = largest;
            largest = arr[i];
        } else if (arr[i] > second && arr[i] < largest) {
            second = arr[i];
        }
    }

    return (second == INT_MIN) ? -1 : second;
    }
};


Q2.Given an integer n, we need to repeatedly find the sum of its digits until the result becomes a single-digit number.

Examples:
Input: n = 1234 
Output: 1 
Explanation:
Step 1: 1 + 2 + 3 + 4 = 10 
Step 2: 1 + 0 = 1

ANSWER>>
#include<iostream>
using namespace std;

int addrepetitive(int n)
{
    while (n >9)
    {
        int sum = 0;
        while (n > 0) 
        {
            sum = sum + n % 10;
            n = n / 10;    
        }
        n = sum;
    }
    return n;
}

int main()
{
    int n=9;
    cout << "Single digit after repetitive addition: " << addrepetitive(n);
}


ANSWER2>>
#include <iostream>
using namespace std;
int adddigits(int n)
{
    int sum = 0;
        while (n > 0) 
        {
            sum = sum + n % 10;
            n = n / 10;    
        }
        n = sum;
    return n;
}
int addrepetitive(int m)
{
    while (m > 9)
    {
      m=adddigits(m);
    }
    return m;
}

int main()
{
    int n=915;
    cout << "Single digit after repetitive addition: " << addrepetitive(n);
}


Q3. Find the pow ; user input ?
ANSWER1>>
#include<iostream>
using namespace std;

long int POW(int b,int e)
{
   long int ans=1;
   for(int i=1;i<=e;i++)
   {
       ans=ans*b;
   }
   return(ans);
}

int main()
{
    int b,e;
    cout<<"enter the base- ";
    cin>>b;
    cout<<"enter the exponential- ";
    cin>>e;
    cout<<"output is = "<<POW(b,e)<<endl;
}

ANSWER2>>
#include<iostream>
using namespace std;

long int POW(int b,int e)
{
   int ans=b;
   if(e>1)
   {
      return ans*POW(ans,(e-1));
   }
   return(ans);
}

int main()
{
    int b,e;
    cout<<"enter the base- ";
    cin>>b;
    cout<<"enter the exponential- ";
    cin>>e;
    cout<<"output is = "<<POW(b,e)<<endl;
}
