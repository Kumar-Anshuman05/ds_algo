Q1.
Given an array of positive integers arr[] of size n, the task is to find second largest distinct element in the array.

Note: If the second largest element does not exist, return -1.

ANSWER>>
class Solution {
  public:
    int getSecondLargest(vector<int> &arr) {
        int n = arr.size();
        // code here
        if (n < 2) return -1; 

    int largest = INT_MIN;
    int second = INT_MIN;

    for (int i = 0; i < n; ++i) {
        if (arr[i] > largest) {
            second = largest;
            largest = arr[i];
        } else if (arr[i] > second && arr[i] < largest) {
            second = arr[i];
        }
    }

    return (second == INT_MIN) ? -1 : second;
    }
};


Q2.Given an integer n, we need to repeatedly find the sum of its digits until the result becomes a single-digit number.

Examples:
Input: n = 1234 
Output: 1 
Explanation:
Step 1: 1 + 2 + 3 + 4 = 10 
Step 2: 1 + 0 = 1

ANSWER>>
#include<iostream>
int add(int n)
{
     int x=0;
    if(n>9)
    {
        if(n>0)
        {
            x=x+n%10;
            n=n/10;
        }
        else
        {
            x=x+n;
        }
        return(x);
    }
    return (n);
}

int main()
{
    int n=5;
    std::cout<<"repetitive addition of digits of number "<<n<<" = "<<add(n);
}
